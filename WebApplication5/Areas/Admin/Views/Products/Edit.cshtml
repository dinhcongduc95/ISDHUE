@model WebApplication5.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2 class="center light">Chỉnh sửa sản phẩm: @Model.Name</h2>
<div class="container">

    <div class="section">


        @using (Html.BeginForm())
        {
            <div class="row card-panel hoverable">
                @if (string.IsNullOrEmpty(Model.ImageLink))
                {
                    <img class="responsive-img" id="Thumbnail" src="http://web-vn.com/wp-content/uploads/2014/04/dummy-image-grey-e1398449111870.jpg"/>
                }
                else
                {
                    <img class="responsive-img" id="Thumbnail" src="@Url.Content(Model.ImageLink)"/>
                }
                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.ImageLink, "Hình ảnh")
                    </div>
                    <div class="col l5">
                        @Html.TextBoxFor(m => m.ImageLink, new {id = "ImageLink", @readonly = ""})

                        @Html.ValidationMessageFor(model => model.ImageLink, "", new {@class = "red-text"})
                    </div>
                    <div class="col l2 center">
                        <a class="waves-effect waves-light btn" id="btnChooseImage">Chọn ảnh</a>
                    </div>
                </div>
            </div>

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new {@class = "red-text"})
            @Html.HiddenFor(model => model.Id)
            <div class="row card-panel hoverable">
                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.Name, new {@class = ""})
                    </div>
                    <div class="col l7">
                        @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = ""}})
                        @Html.ValidationMessageFor(model => model.Name, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.Description, new {@class = ""})
                    </div>
                    <div class="col l7">
                        @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = ""}})
                        @Html.ValidationMessageFor(model => model.Description, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.Price, new {@class = ""})
                    </div>
                    <div class="col l7">
                        @Html.EditorFor(model => model.Price, new {htmlAttributes = new {@class = ""}})
                        @Html.ValidationMessageFor(model => model.Price, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.Origin, new {@class = ""})
                    </div>
                    <div class="col l7">
                        @Html.EditorFor(model => model.Origin, new {htmlAttributes = new {@class = ""}})
                        @Html.ValidationMessageFor(model => model.Origin, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.CreateDate, new {@class = ""})
                    </div>
                    <div class="col l7">
                        @Html.EditorFor(model => model.CreateDate, new {htmlAttributes = new {@class = "", @readonly = ""}})
                        @Html.ValidationMessageFor(model => model.CreateDate, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.CategoryIdRef)
                    </div>
                    <div class="col l7">
                        @Html.DropDownList("CategoryIdRef", null, new {@class = ""})
                        @Html.ValidationMessageFor(model => model.CategoryIdRef, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row">
                    <div class="col l1 offset-l2">
                        @Html.LabelFor(model => model.DocumentIdRef)
                    </div>
                    <div class="col l7">
                        @Html.DropDownList("DocumentIdRef", null, new {@class = ""})
                        @Html.ValidationMessageFor(model => model.DocumentIdRef, "", new {@class = "red-text"})
                    </div>
                </div>

                <div class="row center">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default"/>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row card-panel hoverable center">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "waves-effect waves-light btn" })
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="@Url.Content("~/Content/ckfinder/ckfinder.js")"></script>
<script src="@Url.Content("~/Scripts/ChooseImageScript.js")"></script>
